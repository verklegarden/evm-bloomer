use std::collections::HashMap;


lazy_static! {
    pub static ref EVM_OPCODES: HashMap<&'static str, u8> = {
        let mut m = HashMap::new();

        m.insert("STOP", 0x00);
        m.insert("ADD", 0x01);
        m.insert("MUL", 0x02);
        m.insert("SUB", 0x03);
        m.insert("DIV", 0x04);
        m.insert("SDIV", 0x05);
        m.insert("MOD", 0x06);
        m.insert("SMOD", 0x07);
        m.insert("ADDMOD", 0x08);
        m.insert("MULMOD", 0x09);
        m.insert("EXP", 0x0a);
        m.insert("SIGNEXTEND", 0x0b);
        m.insert("LT", 0x10);
        m.insert("GT", 0x11);
        m.insert("SLT", 0x12);
        m.insert("SGT", 0x13);
        m.insert("EQ", 0x14);
        m.insert("ISZERO", 0x15);
        m.insert("AND", 0x16);
        m.insert("OR", 0x17);
        m.insert("XOR", 0x18);
        m.insert("NOT", 0x19);
        m.insert("BYTE", 0x1a);
        m.insert("SHL", 0x1b);
        m.insert("SHR", 0x1c);
        m.insert("SAR", 0x1d);
        m.insert("SHA3", 0x20);
        m.insert("ADDRESS", 0x30);
        m.insert("BALANCE", 0x31);
        m.insert("ORIGIN", 0x32);
        m.insert("CALLER", 0x33);
        m.insert("CALLVALUE", 0x34);
        m.insert("CALLDATALOAD", 0x35);
        m.insert("CALLDATASIZE", 0x36);
        m.insert("CALLDATACOPY", 0x37);
        m.insert("CODESIZE", 0x38);
        m.insert("CODECOPY", 0x39);
        m.insert("GASPRICE", 0x3a);
        m.insert("EXTCODESIZE", 0x3b);
        m.insert("EXTCODECOPY", 0x3c);
        m.insert("RETURNDATASIZE", 0x3d);
        m.insert("RETURNDATACOPY", 0x3e);
        m.insert("BLOCKHASH", 0x40);
        m.insert("COINBASE", 0x41);
        m.insert("TIMESTAMP", 0x42);
        m.insert("NUMBER", 0x43);
        m.insert("DIFFICULTY", 0x44);
        m.insert("GASLIMIT", 0x45);
        m.insert("CHAINID", 0x46);
        m.insert("SELFBALANCE", 0x47);
        m.insert("BASEFEE", 0x48);
        m.insert("POP", 0x50);
        m.insert("MLOAD", 0x51);
        m.insert("MSTORE", 0x52);
        m.insert("MSTORE8", 0x53);
        m.insert("SLOAD", 0x54);
        m.insert("SSTORE", 0x55);
        m.insert("JUMP", 0x56);
        m.insert("JUMPI", 0x57);
        m.insert("PC", 0x58);
        m.insert("MSIZE", 0x59);
        m.insert("GAS", 0x5a);
        m.insert("JUMPDEST", 0x5b);
        m.insert("PUSH1", 0x60);
        m.insert("PUSH2", 0x61);
        m.insert("PUSH3", 0x62);
        m.insert("PUSH4", 0x63);
        m.insert("PUSH5", 0x64);
        m.insert("PUSH6", 0x65);
        m.insert("PUSH7", 0x66);
        m.insert("PUSH8", 0x67);
        m.insert("PUSH9", 0x68);
        m.insert("PUSH10", 0x69);
        m.insert("PUSH11", 0x6a);
        m.insert("PUSH12", 0x6b);
        m.insert("PUSH13", 0x6c);
        m.insert("PUSH14", 0x6d);
        m.insert("PUSH15", 0x6e);
        m.insert("PUSH16", 0x6f);
        m.insert("PUSH17", 0x70);
        m.insert("PUSH18", 0x71);
        m.insert("PUSH19", 0x72);
        m.insert("PUSH20", 0x73);
        m.insert("PUSH21", 0x74);
        m.insert("PUSH22", 0x75);
        m.insert("PUSH23", 0x76);
        m.insert("PUSH24", 0x77);
        m.insert("PUSH25", 0x78);
        m.insert("PUSH26", 0x79);
        m.insert("PUSH27", 0x7a);
        m.insert("PUSH28", 0x7b);
        m.insert("PUSH29", 0x7c);
        m.insert("PUSH30", 0x7d);
        m.insert("PUSH31", 0x7e);
        m.insert("PUSH32", 0x7f);
        m.insert("DUP1", 0x80);
        m.insert("DUP2", 0x81);
        m.insert("DUP3", 0x82);
        m.insert("DUP4", 0x83);
        m.insert("DUP5", 0x84);
        m.insert("DUP6", 0x85);
        m.insert("DUP7", 0x86);
        m.insert("DUP8", 0x87);
        m.insert("DUP9", 0x88);
        m.insert("DUP10", 0x89);
        m.insert("DUP11", 0x8a);
        m.insert("DUP12", 0x8b);
        m.insert("DUP13", 0x8c);
        m.insert("DUP14", 0x8d);
        m.insert("DUP15", 0x8e);
        m.insert("DUP16", 0x8f);
        m.insert("SWAP1", 0x90);
        m.insert("SWAP2", 0x91);
        m.insert("SWAP3", 0x92);
        m.insert("SWAP4", 0x93);
        m.insert("SWAP5", 0x94);
        m.insert("SWAP6", 0x95);
        m.insert("SWAP7", 0x96);
        m.insert("SWAP8", 0x97);
        m.insert("SWAP9", 0x98);
        m.insert("SWAP10", 0x99);
        m.insert("SWAP11", 0x9a);
        m.insert("SWAP12", 0x9b);
        m.insert("SWAP13", 0x9c);
        m.insert("SWAP14", 0x9d);
        m.insert("SWAP15", 0x9e);
        m.insert("SWAP16", 0x9f);
        m.insert("LOG0", 0xa0);
        m.insert("LOG1", 0xa1);
        m.insert("LOG2", 0xa2);
        m.insert("LOG3", 0xa3);
        m.insert("LOG4", 0xa4);
        m.insert("CREATE", 0xf0);
        m.insert("CALL", 0xf1);
        m.insert("CALLCODE", 0xf2);
        m.insert("RETURN", 0xf3);
        m.insert("DELEGATECALL", 0xf4);
        m.insert("CREATE2", 0xf5);
        m.insert("STATICCALL", 0xfa);
        m.insert("REVERT", 0xfd);
        // m.insert("INVALID", 0xfe); Removed as not a valid instruction
        m.insert("SELFDESTRUCT", 0xff);

        m
    };
}
